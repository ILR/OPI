
COMMENT("This type contains data required to describe a Kepler-Orbit")
BEGIN_STRUCTURE( Orbit )
  COMMENT( "Semi major axis")
  STRUCTURE_VARIABLE(float semi_major_axis)
  COMMENT( "Eccentricity")
  STRUCTURE_VARIABLE(float eccentricity)
  COMMENT( "Inclination")
  STRUCTURE_VARIABLE(float inclination)
  COMMENT( "Rectascension of ascending node")
  STRUCTURE_VARIABLE(float raan)
  COMMENT( "Argument of perigee")
  STRUCTURE_VARIABLE(float arg_of_perigee)
  COMMENT( "Mean anomaly")
  STRUCTURE_VARIABLE(float mean_anomaly)
  COMMENT( "Beginning of life" )
  STRUCTURE_VARIABLE(float bol)
  COMMENT( "End of life" )
  STRUCTURE_VARIABLE(float eol)
END_STRUCTURE( Orbit )


COMMENT("This type contains the objects additional properties")
BEGIN_STRUCTURE( ObjectProperties )
  COMMENT("factor stating how many real objects this one represents (usually 1)")
  STRUCTURE_VARIABLE(float factor)
  COMMENT("The objects mass in [kg]")
  STRUCTURE_VARIABLE(float mass)
  COMMENT("The objects diameter in [m]")
  STRUCTURE_VARIABLE(float diameter)
  COMMENT("The objects area to mass ratio [mÂ²/kg]")
  STRUCTURE_VARIABLE(float area_to_mass)
  COMMENT("The objects drag coefficient")
  STRUCTURE_VARIABLE(float drag_coefficient)
  COMMENT("The objects reflectivity coefficient")
  STRUCTURE_VARIABLE(float reflectivity)
  COMMENT("the object's id")
  STRUCTURE_VARIABLE(int id)
END_STRUCTURE( ObjectProperties )

COMMENT("This type represents an objects status flags")
BEGIN_STRUCTURE( ObjectStatus )
  COMMENT("if the object has reentered")
  STRUCTURE_VARIABLE(int reentered)
END_STRUCTURE( ObjectStatus )

COMMENT("This type represents a 3-dimensional vector")
BEGIN_STRUCTURE( Vector3 )
  COMMENT("x position")
  STRUCTURE_VARIABLE(float x)
  COMMENT("y position")
  STRUCTURE_VARIABLE(float y)
  COMMENT("z position")
  STRUCTURE_VARIABLE(float z)
END_STRUCTURE( Vector3 )

COMMENT("This type represents a pair of two object indices")
BEGIN_STRUCTURE( IndexPair )
  COMMENT("the first object")
  STRUCTURE_VARIABLE(int object1)
  COMMENT("the second object")
  STRUCTURE_VARIABLE(int object2)
END_STRUCTURE( IndexPair )


COMMENT("This type contains all available object data values")
BEGIN_ENUM(DataType)
  ENUM_VALUE(DATA_ORBIT 0)
  ENUM_VALUE(DATA_PROPERTIES 1)
  ENUM_VALUE(DATA_STATUS 2)
  ENUM_VALUE(DATA_CARTESIAN 3)
  ENUM_VALUE(DATA_VELOCITY 4)
  ENUM_VALUE(DATA_ACCELERATION 5)
END_ENUM(DataType)

COMMENT("This type contains all available device types")
BEGIN_ENUM_AS_INT(Device)
  ENUM_VALUE(DEVICE_NOT_SET -1)
  ENUM_VALUE(DEVICE_HOST 0)
  ENUM_VALUE(DEVICE_CUDA 1)
  ENUM_VALUE(DEVICE_CUDA_LAST 100)
END_ENUM(Device)


COMMENT("This type contains all known object property types")
BEGIN_ENUM(PropertyType)
  ENUM_VALUE(TYPE_UNKNOWN 0)
# basic types
  ENUM_VALUE(TYPE_INTEGER 1)
  ENUM_VALUE(TYPE_FLOAT 2)
  ENUM_VALUE(TYPE_DOUBLE 3)
  ENUM_VALUE(TYPE_STRING 4)

# array types
  ENUM_VALUE(TYPE_INTEGER_ARRAY 11)
  ENUM_VALUE(TYPE_FLOAT_ARRAY 12)
  ENUM_VALUE(TYPE_DOUBLE_ARRAY 13)
END_ENUM(PropertyType)

COMMENT("This type contains all error values")
BEGIN_ENUM(ErrorCode)
  ENUM_VALUE(SUCCESS 0)
  ENUM_VALUE(UNKNOWN_ERROR 1)
  ENUM_VALUE(INVALID_ARGUMENT 2)
  ENUM_VALUE(UNKNOWN_VARIABLE 3)
  ENUM_VALUE(INDEX_RANGE 4)
  ENUM_VALUE(INVALID_TYPE 5)
  ENUM_VALUE(DIRECTORY_NOT_FOUND 6)
  ENUM_VALUE(INVALID_DEVICE 7)
  ENUM_VALUE(INVALID_PROPERTY 8)
  ENUM_VALUE(INCOMPATIBLE_TYPES 9)
  ENUM_VALUE(NOT_IMPLEMENTED 50)
  ENUM_VALUE(CUDA_REQUIRED 100)
  ENUM_VALUE(CUDA_OLDVERSION 101)
END_ENUM(ErrorCode)
